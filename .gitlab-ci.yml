variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375/
  IMAGE_ORG: xpub
  IMAGE_NAME: xpub-elife
  BASE_DOMAIN: gateway.xpub.elifesciences.yld.io
  CONFIGURATION_REPOSITORY: https://gitlab.coko.foundation/yld/xpub-deployment-config-postgres.git

services:
  - docker:dind

stages:
  - build
  - test
  - review
  - deploy

build:
  image: docker:latest
  stage: build
  tags:
    - elife-kubernetes-runner
  except:
    - schedules
  script:
    - docker version
    - docker pull $IMAGE_ORG/$IMAGE_NAME:latest
    - docker build --cache-from $IMAGE_ORG/$IMAGE_NAME:latest --build-arg CI_COMMIT_SHA -t $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA .
    - if [ -z "$DOCKERHUB_USERNAME" ] || [ -z "$DOCKERHUB_PASSWORD" ]; then echo "Not pushing" && exit 0; fi
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
    - echo "Ignore warning! Cannot perform an interactive login from a non TTY device"
    - docker push $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA

lint:
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: test
  tags:
    - elife-kubernetes-runner
  except:
    - schedules
  variables:
    GIT_STRATEGY: none
  script:
    - cd ${HOME}
    - npm run lint

test:
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: test
  tags:
    - elife-kubernetes-runner
  except:
    - schedules
  variables:
    GIT_STRATEGY: none
    # setup data for postgres image
    POSTGRES_USER: test
    POSTGRES_PASSWORD: pw
    # connection details for tests
    PGUSER: test
    PGPASSWORD: pw
    NODE_ENV: test
  services:
    - postgres
  script:
    - cd ${HOME}
    # specify host here else it confuses the linked postgres image
    - PGHOSTADDR=127.0.0.1 npm test

test:browser:
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: test
  tags:
    - elife-kubernetes-runner
  except:
    - schedules
  variables:
    GIT_STRATEGY: none
    BROWSER: chrome:headless --no-sandbox
    # setup data for postgres image
    POSTGRES_USER: test
    POSTGRES_PASSWORD: pw
    # connection details for tests
    PGUSER: test
    PGPASSWORD: pw
    NODE_ENV: production
    NODE_CONFIG_ENV: test
  services:
    - postgres
  script:
    - cd ${HOME}
    # specify host here else it confuses the linked postgres image
    - export PGHOSTADDR=127.0.0.1
    - npm run test:browser -- --screenshots $CI_PROJECT_DIR/screenshots --screenshots-on-fails
  artifacts:
    paths:
      - screenshots
    when: on_failure
    expire_in: 1 week

test:dependencies:
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: test
  tags:
  - elife-kubernetes-runner
  except:
  - schedules
  variables:
    GIT_STRATEGY: none
    NODE_ENV: test
  script:
  - cd ${HOME}
  - npm run test:dependencies

push:latest:
  image: docker:latest
  stage: deploy
  tags:
    - elife-kubernetes-runner
  except:
    - schedules
  script:
    - if [ -z "$DOCKERHUB_USERNAME" ] || [ -z "$DOCKERHUB_PASSWORD" ]; then echo "Not pushing" && exit 0; fi
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
    - echo "Ignore warning! Cannot perform an interactive login from a non TTY device"
    - docker pull $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
    - docker build --cache-from $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA --build-arg CI_COMMIT_SHA -t $IMAGE_ORG/$IMAGE_NAME:latest --label COMMIT_SHA=$CI_COMMIT_SHA .
    - docker push $IMAGE_ORG/$IMAGE_NAME:latest
  only:
    - develop

styleguide:
  image: $IMAGE_ORG/$IMAGE_NAME:$CI_COMMIT_SHA
  stage: deploy
  tags:
    - elife-kubernetes-runner
  except:
    - schedules
  variables:
    GIT_STRATEGY: none
    NODE_ENV: production
    NODE_CONFIG_ENV: styleguide
    S3_BUCKET: ci-elife-xpub-styleguide
    URL: https://s3.amazonaws.com/$S3_BUCKET/$CI_COMMIT_REF_NAME/index.html
  script:
    - cd ${HOME}
    - npm run build:styleguide
    - node scripts/upload-to-s3.js _build_styleguide $CI_COMMIT_REF_NAME
    - ./scripts/github_status.sh success Styleguide $URL "Deployed successfully"
    - "printf \"\nStyleguide: $URL\n\""

review:
  image: pubsweet/deployer:latest
  stage: review
  tags:
    - elife-kubernetes-runner
  variables:
    PACKAGE_NAME: xpub-elife
    FORCE_FRESH_DB: "yes"
    REQUIRES_PROVISIONING: "yes"
    URL: http://${CI_ENVIRONMENT_SLUG}.${BASE_DOMAIN}
  environment:
    name: review/$CI_COMMIT_REF_NAME
    # !! kube-lego will fail if domain > 64 chars
    url: http://${CI_ENVIRONMENT_SLUG}.${BASE_DOMAIN}
    on_stop: stop_review
  except:
  - master
  - develop
  - schedules
  script:
    - source deploy.sh
    - create_deployment
    - ./scripts/github_status.sh success "Review Environment" $URL "Deployed successfully"
    - "printf \"\nEnvironment: $URL\n\""

stop_review:
  image: pubsweet/deployer:latest
  stage: review
  tags:
    - elife-kubernetes-runner
  variables:
    PACKAGE_NAME: xpub-elife
    REQUIRES_PROVISIONING: "yes"
    GIT_STRATEGY: none
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  except:
  - master
  - develop
  - schedules
  script:
    - source deploy.sh
    - delete_deployment
    - delete_objects_in_environment pvc

scale-cluster:
  image: pubsweet/kubernetes:latest
  stage: build
  variables:
    DOCKER_HOST: ""
    AWS_ACCESS_KEY_ID: $YLD_ACCESS_KEY_ID
    AWS_DEFAULT_REGION: $YLD_DEFAULT_REGION
    AWS_SECRET_ACCESS_KEY: $YLD_SECRET_ACCESS_KEY
  only:
    - schedules
  tags:
    - docker
  script:
    - scale-cluster
